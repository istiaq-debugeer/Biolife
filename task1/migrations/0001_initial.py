# Generated by Django 4.2 on 2023-08-07 18:40

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Banner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bannerimage', models.ImageField(upload_to='banner/')),
                ('firstline', models.CharField(max_length=50)),
                ('secoundline', models.CharField(max_length=50)),
                ('thirdline', models.CharField(max_length=50)),
                ('fourthline', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='bannerMovinImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('movingimage', models.ImageField(upload_to='moveimage/')),
            ],
        ),
        migrations.CreateModel(
            name='Carousel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('carousel', models.ImageField(upload_to='carousel/')),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('textcomment', models.TextField(max_length=500)),
                ('publishdate', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=100)),
                ('phone', models.IntegerField()),
                ('message', models.TextField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='DealsOfTheDay',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('productimage', models.ImageField(upload_to='ProductDeals/')),
                ('targetdatetime', models.DateTimeField()),
                ('productcategory', models.CharField(max_length=50)),
                ('productname', models.CharField(max_length=50)),
                ('productDiscountprice', models.DecimalField(decimal_places=2, max_digits=90)),
                ('productOriginalprice', models.DecimalField(decimal_places=2, max_digits=90)),
                ('productditails', models.CharField(max_length=50)),
                ('buttontext', models.CharField(max_length=20)),
            ],
        ),

        migrations.CreateModel(
            name='ProductsCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('icon', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Register',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=55)),
                ('username', models.CharField(max_length=30)),
                ('password1', models.CharField(max_length=35)),
                ('password2', models.CharField(max_length=35)),
            ],
        ),
        migrations.CreateModel(
            name='Slider',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slideImage', models.ImageField(upload_to='slider/')),
                ('slidetitle', models.CharField(max_length=50)),
                ('titleheader', models.CharField(max_length=50)),
                ('titlebottom', models.CharField(max_length=50)),
                ('firstbuttontitle', models.CharField(max_length=50)),
                ('secoundbuttontitle', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='SpecialSlider',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slideImage', models.ImageField(upload_to='special_slider/')),
                ('slideHeader', models.CharField(max_length=30)),
                ('firsttitle', models.CharField(max_length=30)),
                ('secoundtitle', models.CharField(max_length=30)),
                ('productName', models.CharField(max_length=40)),
                ('productDiscountPrice', models.DecimalField(decimal_places=2, max_digits=90)),
                ('productOriginalPrice', models.DecimalField(decimal_places=2, max_digits=90)),
                ('Buttontext', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='TopRatedProducts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('productimage', models.ImageField(upload_to='toprelatedProduct/')),
                ('productcategory', models.CharField(max_length=50)),
                ('productname', models.CharField(max_length=50)),
                ('productDiscountprice', models.DecimalField(decimal_places=2, max_digits=90)),
                ('productOriginalprice', models.DecimalField(decimal_places=2, max_digits=90)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=55)),
                ('username', models.CharField(max_length=30)),
                ('password1', models.CharField(max_length=35)),
                ('password2', models.CharField(max_length=35)),
            ],
        ),
        migrations.CreateModel(
            name='Related',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('productimage', models.ImageField(upload_to='Related/')),
                ('productname', models.CharField(max_length=100)),
                ('prodcutdiscountprice', models.DecimalField(decimal_places=2, default=0.0, max_digits=90)),
                ('productoriginalprice', models.DecimalField(decimal_places=2, default=0.0, max_digits=90)),
                ('productdescriptopm', models.CharField(max_length=100)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='task1.productscategory')),
            ],
        ),
        migrations.CreateModel(
            name='CommentAttachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attachment', models.FileField(upload_to='attachment/')),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='task1.comment')),
            ],
        ),
        migrations.AddField(
            model_name='comment',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='task1.register'),
        ),
        migrations.CreateModel(
            name='BlogPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('blogImage', models.ImageField(upload_to='blog/')),
                ('blogheader', models.CharField(max_length=50)),
                ('blogeradminImage', models.ImageField(upload_to='blog/admin/')),
                ('postdate', models.DateTimeField(auto_now=True)),
                ('blogditails', models.TextField(max_length=500)),
                ('tags', models.ManyToManyField(to='task1.tag')),
            ],
        ),
    ]
